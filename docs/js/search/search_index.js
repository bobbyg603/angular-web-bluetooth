var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AWBOptions.html",[0,1.352,1,1.806]],["body/interfaces/AWBOptions.html",[0,1.547,1,3.144,2,2.607,3,0.494,4,0.494,5,0.437,6,0.828,7,0.331,8,2.307,9,0.437,10,1.288,11,1.084,12,3.508,13,2.685,14,0.554,15,0.035,16,1.077,17,3.316,18,3.9,19,3.009,20,0.683,21,3.9,22,2.607,23,1.677,24,3.009,25,1.868,26,3.009,27,1.561,28,2.198,29,3.009,30,0.689,31,3.748,32,1.305,33,2.15,34,2.607,35,2.678,36,3.009,37,3.316,38,3.009,39,2.307,40,0.143,41,2.198,42,1.867,43,3.009,44,1.547,45,2.224,46,2.198,47,3.009,48,2.307,49,1.696,50,0.025,51,0.025]],["title/components/AppComponent.html",[52,0.868,53,1.131]],["body/components/AppComponent.html",[3,0.561,4,0.561,5,0.497,15,0.034,16,0.776,20,0.776,30,0.497,40,0.163,50,0.027,51,0.027,52,1.515,53,2.062,54,2.382,55,2.12,56,2.12,57,3.416,58,2.12,59,3.189,60,2.414,61,2.382,62,2.622,63,2.12,64,2.622,65,2.382,66,2.12,67,2.975,68,2.12,69,0.96,70,2.12,71,1.469,72,1.756,73,2.12,74,1.469,75,2.12,76,1.469,77,2.12,78,1.469,79,2.12,80,1.469,81,1.926,82,2.12,83,2.12]],["title/modules/AppModule.html",[84,2.279,85,1.806]],["body/modules/AppModule.html",[3,0.417,4,0.417,5,0.369,7,0.279,12,1.947,15,0.035,16,1.191,17,2.67,20,0.577,30,0.369,39,2.67,40,0.121,41,2.525,50,0.022,51,0.022,53,2.168,71,1.99,74,1.99,76,1.99,78,1.99,80,1.99,85,3.582,86,1.744,87,2.67,88,2.54,89,2.54,90,2.54,91,2.54,92,3.483,93,2.54,94,1.947,95,3.055,96,4.189,97,4.189,98,4.189,99,3.055,100,4.189,101,3.055,102,4.189,103,3.483,104,3.055,105,4.189,106,3.055,107,4.189,108,3.055,109,4.189,110,3.055,111,3.055,112,4.189,113,3.055,114,4.189,115,3.055,116,4.189,117,3.055,118,4.189,119,3.055,120,2.54,121,4.189,122,1.744,123,1.744,124,4.189,125,3.055,126,1.431,127,1.193,128,3.055,129,3.055,130,3.055,131,3.055,132,3.055,133,3.055,134,3.055,135,4.189,136,1.576,137,2.54,138,1.092]],["title/classes/AppPage.html",[40,0.125,139,2.279]],["body/classes/AppPage.html",[3,0.597,4,0.597,5,0.529,9,0.529,15,0.034,16,0.826,30,0.529,32,1.209,40,0.173,50,0.028,51,0.028,61,2.05,65,2.05,136,2.256,139,3.804,140,2.256,141,3.637,142,1.1,143,5.892,144,5.892,145,0.997,146,4.375,147,1.1,148,5.095,149,4.375,150,4.375,151,4.375,152,4.375,153,3.151,154,4.375]],["title/components/BatteryLevelComponent.html",[52,0.868,71,1.131]],["body/components/BatteryLevelComponent.html",[3,0.23,4,0.23,5,0.203,7,0.154,9,0.203,10,0.738,11,0.699,14,0.818,15,0.035,16,0.79,20,0.318,23,1.369,25,1.098,27,1.405,30,0.405,32,0.385,33,1.05,40,0.067,44,1.789,45,1.148,46,1.259,49,1.259,50,0.014,51,0.014,52,0.921,53,0.602,54,1.259,55,0.868,56,0.868,58,0.868,59,2.509,60,1.9,62,1.386,63,0.868,64,1.386,65,1.259,66,0.868,67,1.976,68,0.868,69,0.79,70,0.868,71,1.369,72,1.636,73,0.868,74,0.602,75,0.868,76,0.602,77,0.868,78,0.602,79,0.868,80,0.602,81,0.789,82,0.868,83,0.868,120,2.789,122,0.961,123,0.961,126,0.789,127,0.657,142,0.56,145,1.08,147,0.975,153,2.416,155,1.916,156,4.152,157,1.212,158,1.259,159,2.138,160,2.138,161,2.138,162,2.138,163,2.844,164,4.463,165,3.355,166,3.612,167,3.355,168,3.355,169,3.214,170,3.214,171,2.789,172,3.71,173,3.71,174,2.789,175,3.214,176,3.214,177,3.214,178,3.355,179,2.416,180,2.789,181,2.138,182,3.355,183,3.355,184,3.214,185,3.355,186,3.355,187,1.916,188,2.789,189,2.416,190,2.416,191,3.355,192,1.628,193,2.789,194,3.355,195,3.355,196,1.958,197,3.48,198,3.355,199,3.355,200,1.461,201,2.668,202,2.138,203,2.138,204,1.369,205,3.83,206,1.713,207,2.441,208,2.441,209,2.441,210,1.713,211,1.713,212,1.635,213,0.88,214,1.073,215,2.078,216,2.668,217,1.683,218,0.768,219,1.683,220,1.534,221,1.683,222,1.713,223,1.255,224,1.683,225,1.572,226,1.683,227,1.683,228,1.683,229,1.713,230,2.39,231,1.683,232,1.572,233,1.731,234,1.683,235,1.683,236,2.985,237,1.683,238,3.83,239,1.683,240,1.683,241,1.683,242,1.683,243,2.668,244,1.683,245,1.683,246,0.868,247,1.683,248,0.961,249,1.073,250,1.433,251,1.386,252,1.535,253,1.535,254,0.961,255,0.961,256,0.961,257,0.961,258,1.073,259,0.961,260,1.073,261,1.713,262,1.073,263,1.073,264,0.602,265,1.073,266,1.399,267,0.789,268,1.399,269,1.683,270,1.073,271,1.073,272,2.688,273,2.688,274,2.688,275,1.683,276,1.683,277,2.688,278,1.073,279,3.355,280,1.683,281,1.731,282,0.868,283,1.683,284,1.212,285,1.073,286,1.073,287,1.683,288,1.073,289,1.073,290,1.683,291,1.073,292,1.073,293,1.073,294,1.683,295,1.683,296,1.683]],["title/injectables/BleService.html",[215,1.352,297,0.868]],["body/injectables/BleService.html",[3,0.456,4,0.456,5,0.403,7,0.305,9,0.403,10,1.221,11,0.926,14,0.85,15,0.035,16,0.944,20,0.63,23,1.986,30,0.403,32,1.145,35,2.54,40,0.132,50,0.024,51,0.024,60,2.083,61,1.564,69,0.944,126,1.564,127,1.304,142,0.926,145,1.119,147,1.157,192,1.666,196,1.737,200,1.456,213,1.093,215,1.9,218,1.018,220,1.456,223,1.5,230,2.54,246,2.752,264,1.193,267,2.084,297,1.221,298,1.722,299,2.405,300,2.58,301,5.002,302,3.698,303,4.435,304,4.435,305,3.339,306,4.448,307,4.448,308,4.751,309,3.339,310,3.339,311,3.339,312,3.339,313,3.339,314,3.339,315,2.775,316,2.775,317,3.339,318,1.906,319,1.906,320,2.775,321,2.775,322,2.775,323,2.775,324,1.722,325,3.339,326,2.775,327,2.775,328,4.448,329,2.405,330,3.339,331,3.339,332,2.775,333,2.775]],["title/injectables/BrowserWebBluetooth.html",[25,1.036,297,0.868]],["body/injectables/BrowserWebBluetooth.html",[3,0.553,4,0.553,5,0.49,6,1.313,7,0.525,9,0.49,10,1.383,11,0.844,14,0.62,15,0.034,16,0.765,20,0.765,25,1.65,30,0.49,32,0.928,33,1.583,35,2.314,40,0.16,50,0.027,51,0.027,60,2.142,69,0.765,127,1.583,136,2.09,142,1.049,145,1.036,147,0.844,148,4.19,213,1.796,218,0.928,297,1.383,298,2.09,300,2.829,329,3.63,334,3.369,335,5.04,336,5.04,337,5.04,338,5.485,339,4.053,340,4.053,341,4.053,342,4.053,343,3.369,344,4.053,345,4.053,346,4.053,347,3.369,348,4.053,349,4.053]],["title/injectables/ConsoleLoggerService.html",[27,0.949,297,0.868]],["body/injectables/ConsoleLoggerService.html",[0,1.599,3,0.511,4,0.511,5,0.452,6,1.276,7,0.51,9,0.452,11,1.101,14,0.809,15,0.035,16,0.707,20,0.707,27,1.437,28,1.754,30,0.639,40,0.19,50,0.026,51,0.026,61,2.246,69,0.998,142,0.998,145,0.998,147,1.101,158,2.246,218,1.21,220,1.931,223,1.586,225,2.246,278,3.054,297,1.451,298,1.931,319,2.737,350,2.385,351,3.452,352,3.808,353,3.743,354,4.247,355,3.808,356,3.743,357,3.808,358,3.743,359,3.019,360,2.696,361,2.696,362,2.696,363,2.696,364,2.696,365,2.696]],["title/components/DashboardComponent.html",[52,0.868,74,1.131]],["body/components/DashboardComponent.html",[3,0.409,4,0.409,5,0.362,7,0.378,9,0.362,15,0.035,16,0.566,20,0.566,30,0.362,40,0.119,50,0.022,51,0.022,52,1.299,53,1.072,54,1.938,55,1.546,56,1.546,58,1.546,59,2.981,60,2.318,62,1.546,63,1.546,64,2.133,65,1.938,66,1.546,67,2.632,68,1.546,69,0.781,70,1.546,71,1.072,72,2.022,73,1.546,74,1.824,75,1.546,76,1.072,77,1.546,78,1.072,79,1.546,80,1.072,81,2.218,82,1.546,83,1.546,145,0.566,153,2.159,155,1.712,161,3.252,166,2.159,169,2.159,170,2.159,175,3.409,176,2.978,177,3.409,179,2.978,184,2.978,187,1.712,188,2.492,189,2.159,190,2.159,204,1.979,213,1.55,233,1.546,347,2.492,366,2.492,367,5.103,368,4.135,369,4.734,370,4.135,371,4.135,372,2.998,373,3.438,374,4.135,375,5.535,376,5.535,377,3.16,378,5.535,379,5.535,380,2.978,381,2.998,382,2.998,383,2.998,384,2.492,385,2.998,386,3.675,387,3.986,388,2.998,389,2.998,390,2.998,391,2.998,392,1.91,393,2.159,394,2.998,395,2.998,396,4.135,397,5.103,398,3.438,399,2.998,400,4.734,401,2.998,402,2.998]],["title/classes/FakeBluetoothDevice.html",[40,0.125,403,1.632]],["body/classes/FakeBluetoothDevice.html",[3,0.351,4,0.351,5,0.311,6,1.296,7,0.518,9,0.311,10,1.309,11,0.773,13,1.327,14,0.806,15,0.035,30,0.576,32,1.091,40,0.189,50,0.02,51,0.02,69,1.025,138,0.92,140,1.327,142,0.773,145,1.049,147,0.907,192,1.306,196,2.12,200,0.843,204,1.807,212,1.45,213,0.843,218,0.85,220,1.426,223,1.78,232,1.206,233,1.327,250,1.586,264,1.704,281,2.247,282,1.327,300,2.608,318,2.487,324,2.247,377,1.469,403,1.915,404,1.469,405,2.487,406,3.039,407,3.039,408,3.086,409,2.887,410,2.573,411,2.573,412,2.12,413,2.573,414,3.713,415,3.039,416,2.573,417,2.775,418,3.357,419,3.357,420,2.573,421,2.573,422,2.573,423,3.039,424,2.366,425,2.366,426,2.366,427,1.64,428,2.366,429,1.915,430,1.64,431,2.366,432,1.64,433,2.366,434,1.327,435,1.586,436,1.64,437,1.64,438,2.366,439,1.64,440,1.64,441,1.64,442,1.64,443,1.64,444,1.327,445,1.469,446,1.64,447,1.64,448,1.64,449,1.64,450,1.327,451,2.366,452,1.469,453,3.039,454,2.775,455,1.64,456,1.64,457,2.366,458,1.64,459,1.64,460,1.64,461,1.64]],["title/classes/FakeBluetoothRemoteGATTCharacteristic.html",[40,0.125,450,1.632]],["body/classes/FakeBluetoothRemoteGATTCharacteristic.html",[3,0.342,4,0.342,5,0.303,6,1.308,7,0.523,9,0.303,10,1.479,11,0.894,13,1.293,14,0.825,15,0.035,30,0.569,32,1.078,40,0.186,50,0.02,51,0.02,69,0.889,138,0.896,140,1.293,142,0.759,145,1.062,147,0.981,192,1.566,196,1.676,200,0.821,204,1.302,212,1.423,213,0.821,218,0.982,220,1.405,223,1.616,232,1.175,233,1.293,250,1.557,264,2.043,281,2.214,282,1.293,300,2.779,318,2.451,324,2.214,377,1.432,403,1.293,404,1.432,405,1.432,406,1.598,407,3.002,408,3.029,409,2.857,412,1.432,415,2.735,417,2.735,418,3.327,419,3.327,423,3.002,424,2.322,425,2.322,426,2.322,427,1.598,428,2.322,429,1.879,430,1.598,431,2.322,432,1.598,433,2.322,434,1.293,435,1.557,436,1.598,437,1.598,438,2.322,439,1.598,440,1.598,441,1.598,442,1.598,443,1.598,444,1.293,445,1.432,446,1.598,447,1.598,448,1.598,449,1.598,450,1.879,451,3.189,452,2.451,453,3.517,454,3.002,455,2.322,456,1.598,457,2.322,458,3.002,459,1.598,460,2.322,461,1.598,462,3.643,463,2.507,464,2.507,465,2.507,466,2.507,467,2.507,468,2.507,469,2.507,470,2.507,471,2.507,472,2.507]],["title/classes/FakeBluetoothRemoteGATTServer.html",[40,0.125,434,1.632]],["body/classes/FakeBluetoothRemoteGATTServer.html",[3,0.363,4,0.363,5,0.321,6,1.283,7,0.513,9,0.321,10,1.329,11,0.791,13,1.371,14,0.815,15,0.035,30,0.585,32,1.108,40,0.191,50,0.02,51,0.02,69,0.837,138,0.95,140,1.371,142,0.791,145,1.035,147,0.924,192,1.33,196,2.141,200,1.244,204,1.83,212,2,213,0.871,218,0.87,220,0.871,223,1.536,232,1.246,233,1.371,250,1.624,264,1.73,281,2.288,282,2.288,300,2.288,318,2.533,324,2.288,377,2.764,403,1.371,404,1.518,405,1.518,406,1.694,407,2.422,409,2.17,412,1.518,415,2.827,417,2.422,418,3.084,419,3.084,423,3.084,424,2.422,425,2.422,426,2.422,427,1.694,428,2.422,429,1.96,430,1.694,431,2.422,432,1.694,433,2.422,434,1.96,435,1.895,436,3.263,437,1.694,438,2.422,439,1.694,440,2.422,441,2.827,442,1.694,443,1.694,444,1.371,445,1.518,446,1.694,447,1.694,448,1.694,449,1.694,450,1.371,451,2.422,452,1.518,453,3.084,454,2.827,455,1.694,456,1.694,457,2.422,458,1.694,459,1.694,460,1.694,461,1.694,473,3.801,474,2.21,475,3.195,476,3.801,477,3.801,478,2.659,479,2.659,480,2.659]],["title/classes/FakeBluetoothRemoteGATTService.html",[40,0.125,444,1.632]],["body/classes/FakeBluetoothRemoteGATTService.html",[3,0.385,4,0.385,5,0.341,6,1.198,7,0.479,9,0.341,10,1.364,11,0.825,13,1.455,14,0.432,15,0.035,30,0.601,32,1.137,40,0.197,50,0.021,51,0.021,69,0.865,138,1.008,140,1.455,142,0.825,145,0.938,147,0.587,192,1.189,196,2.178,200,0.923,204,1.417,212,2.045,213,0.923,218,0.907,223,1.57,233,1.455,250,1.693,264,1.777,267,1.321,281,2.363,282,1.455,300,2.363,318,2.616,324,2.363,377,1.61,403,1.455,404,1.61,405,1.61,406,1.797,407,2.525,409,2.263,412,1.61,415,2.92,417,2.525,418,3.167,419,3.167,423,3.167,424,2.525,425,2.525,426,2.525,427,1.797,428,2.525,429,2.044,430,1.797,431,2.525,432,1.797,433,2.525,434,1.455,435,1.693,436,1.797,437,1.797,438,2.525,439,1.797,440,1.797,441,1.797,442,1.797,443,1.797,444,2.044,445,2.99,446,1.797,447,2.525,448,2.92,449,1.797,450,1.455,451,2.525,452,1.61,453,3.167,454,2.92,455,1.797,456,1.797,457,2.525,458,1.797,459,1.797,460,1.797,461,1.797,474,2.345,481,3.963,482,2.82,483,3.963,484,2.82]],["title/components/HumidityComponent.html",[52,0.868,76,1.131]],["body/components/HumidityComponent.html",[3,0.274,4,0.274,5,0.243,7,0.184,9,0.243,10,0.848,11,0.783,14,0.828,15,0.035,16,0.908,20,0.379,23,1.509,25,1.231,27,1.128,30,0.454,32,0.46,33,1.648,40,0.079,42,1.593,44,1.946,45,1.319,46,1.447,49,1.447,50,0.017,51,0.017,52,1.032,53,0.718,54,1.447,55,1.037,56,1.037,58,1.037,59,2.665,60,2.018,62,1.593,63,1.037,64,1.593,65,1.447,66,1.037,67,2.177,68,1.037,69,0.86,70,1.037,71,0.718,72,0.859,73,1.037,74,0.718,75,1.037,76,1.509,77,1.037,78,0.718,79,1.037,80,0.718,81,0.942,82,1.037,83,1.037,122,1.148,123,1.148,126,0.942,127,0.785,138,1.344,142,0.643,145,1.099,147,1.043,155,2.147,158,1.447,159,2.396,160,2.396,162,2.396,163,2.396,181,2.396,187,2.147,192,1.266,196,1.877,200,1.574,201,2.902,202,2.396,203,2.396,204,1.509,206,1.968,207,2.689,208,2.689,209,2.689,210,1.968,211,1.968,212,1.469,213,1.011,214,1.281,215,2.208,216,2.902,218,0.861,220,1.639,222,1.968,223,1.128,225,0.942,229,1.968,230,2.147,236,2.902,243,1.281,246,1.037,248,1.148,249,1.281,250,1.803,251,1.593,252,1.763,253,1.763,254,1.148,255,1.148,256,1.148,257,1.148,258,1.281,259,1.148,260,1.281,261,1.281,262,1.281,263,1.281,264,0.718,265,1.281,267,0.942,270,1.281,271,1.281,285,1.281,286,1.281,288,1.281,289,1.281,291,1.968,292,1.281,293,1.281,320,1.671,321,1.671,322,2.567,380,2.708,384,1.671,386,2.708,392,1.281,393,1.447,435,0.859,485,1.447,486,3.508,487,3.126,488,3.126,489,3.126,490,3.126,491,3.508,492,2.01,493,2.01,494,2.01,495,2.01,496,2.01,497,2.01,498,2.01,499,2.01,500,3.126,501,2.01,502,3.126,503,1.671,504,2.567,505,2.01,506,3.508,507,2.01,508,2.01,509,2.01,510,2.01,511,2.01,512,2.01,513,1.671,514,1.447,515,1.671,516,2.224,517,2.224,518,2.224,519,2.224,520,2.01,521,1.671,522,2.224,523,1.447,524,3.088,525,1.671,526,1.671,527,1.671,528,2.01,529,1.671,530,1.671,531,1.671,532,1.447,533,3.126,534,1.671,535,2.567,536,1.671,537,1.671,538,1.671,539,1.671,540,1.671,541,1.671,542,1.671,543,1.671,544,1.671,545,1.671,546,1.671,547,1.671,548,2.567,549,1.447,550,1.671,551,1.671,552,1.671,553,1.447]],["title/interfaces/Logger.html",[0,1.352,359,1.806]],["body/interfaces/Logger.html",[0,1.579,2,2.662,3,0.505,4,0.505,5,0.447,6,1.27,7,0.508,9,0.447,11,1.094,14,0.805,15,0.035,16,0.698,20,0.698,27,1.108,28,1.732,30,0.635,40,0.188,50,0.026,51,0.026,61,2.228,69,0.992,142,0.99,145,0.992,147,1.094,158,2.228,218,1.203,220,1.924,223,1.835,225,2.228,278,3.03,297,1.443,319,2.715,350,2.355,351,3.424,352,3.424,354,4.232,355,3.424,357,3.424,359,3.168,360,3.424,361,3.424,362,3.424,363,2.662,364,2.662,365,2.662,554,3.696,555,3.696,556,3.696]],["title/injectables/NoLoggerService.html",[28,1.482,297,0.868]],["body/injectables/NoLoggerService.html",[0,1.599,3,0.511,4,0.511,5,0.452,6,1.276,7,0.51,9,0.452,11,1.101,14,0.809,15,0.035,16,0.707,20,0.707,27,1.122,28,2.246,30,0.639,40,0.19,50,0.026,51,0.026,61,2.246,69,0.998,142,0.998,145,0.998,147,1.101,158,2.246,218,1.21,220,1.931,223,1.586,225,2.246,278,3.054,297,1.451,298,1.931,319,2.737,350,2.385,351,3.452,352,3.808,354,4.247,355,3.808,357,3.808,359,3.019,360,2.696,361,2.696,362,2.696,363,2.696,364,2.696,365,2.696,557,3.743,558,3.743,559,3.743]],["title/injectables/ServerWebBluetooth.html",[297,0.868,560,2.279]],["body/injectables/ServerWebBluetooth.html",[3,0.611,4,0.611,5,0.541,6,1.225,7,0.49,9,0.541,15,0.034,16,0.845,20,0.845,30,0.541,32,1.024,40,0.177,42,2.955,50,0.029,51,0.029,142,1.115,145,0.845,147,0.932,259,3.39,297,1.47,298,2.308,560,3.856,561,3.72,562,4.474,563,4.474,564,3.72,565,4.474]],["title/components/StepCounterComponent.html",[52,0.868,78,1.131]],["body/components/StepCounterComponent.html",[3,0.269,4,0.269,5,0.238,7,0.18,9,0.238,10,0.834,11,0.773,14,0.823,15,0.035,16,0.851,20,0.371,23,1.492,25,1.215,27,1.113,30,0.448,32,0.695,33,1.186,40,0.078,44,1.927,45,1.298,46,1.423,49,1.423,50,0.016,51,0.016,52,1.018,53,0.703,54,1.423,55,1.015,56,1.015,58,1.015,59,2.647,60,2.004,62,1.567,63,1.015,64,1.567,65,1.423,66,1.015,67,2.152,68,1.015,69,0.851,70,1.015,71,0.703,72,0.84,73,1.015,74,0.703,75,1.015,76,0.703,77,1.015,78,1.492,79,1.015,80,0.703,81,0.922,82,1.015,83,1.015,122,1.123,123,1.123,126,0.922,127,0.768,138,1.086,142,0.632,145,1.063,147,0.993,155,2.119,158,1.423,159,2.364,160,2.364,162,2.364,163,3.037,166,2.672,169,2.672,170,2.672,171,3.085,172,3.962,173,3.962,174,3.085,175,3.433,176,3.433,177,2.672,179,2.672,180,3.085,181,3.037,184,2.672,187,2.722,189,2.672,190,2.672,192,1.613,193,3.085,196,1.861,200,1.561,201,2.874,202,2.364,203,2.364,204,1.492,206,1.936,207,2.659,208,2.659,209,2.659,210,1.936,211,1.936,212,1.449,213,0.995,214,1.254,215,2.192,216,2.874,218,0.849,220,1.561,222,1.936,223,1.113,225,1.739,229,1.936,230,2.119,232,0.922,236,2.874,243,1.254,246,1.015,248,1.123,249,1.254,250,1.927,251,1.567,252,1.734,253,1.734,254,1.123,255,1.123,256,1.123,257,1.123,258,1.254,259,1.123,260,1.254,261,1.254,262,1.254,263,1.254,264,0.703,267,0.922,270,1.254,271,1.254,281,1.015,284,2.188,285,1.254,286,1.254,288,1.254,289,1.254,291,1.936,292,1.254,293,1.254,387,2.188,475,2.188,516,2.188,517,2.188,518,2.188,519,2.188,522,2.188,523,1.417,532,1.417,549,1.417,553,1.417,566,1.417,567,3.037,568,3.71,569,3.71,570,3.71,571,3.71,572,3.71,573,3.71,574,1.967,575,1.967,576,1.967,577,1.967,578,1.967,579,1.967,580,1.967,581,1.967,582,1.967,583,1.967,584,1.967,585,1.967,586,1.967,587,3.71,588,1.967,589,3.71,590,1.967,591,1.967,592,1.967,593,1.967,594,1.967]],["title/components/TemperatureComponent.html",[52,0.868,80,1.131]],["body/components/TemperatureComponent.html",[3,0.273,4,0.273,5,0.241,7,0.183,9,0.241,10,0.843,11,0.78,14,0.827,15,0.035,16,0.905,20,0.377,23,1.503,25,1.226,27,1.123,30,0.452,32,0.703,33,1.642,40,0.079,42,1.585,44,1.94,45,1.312,46,1.439,49,1.439,50,0.016,51,0.016,52,1.028,53,0.714,54,1.439,55,1.03,56,1.03,58,1.03,59,2.66,60,2.013,62,1.585,63,1.03,64,1.585,65,1.439,66,1.03,67,2.169,68,1.03,69,0.857,70,1.03,71,0.714,72,0.853,73,1.03,74,0.714,75,1.03,76,0.714,77,1.03,78,0.714,79,1.03,80,1.503,81,1.97,82,1.03,83,1.03,122,1.14,123,1.14,126,0.935,127,0.779,138,1.339,142,0.64,145,1.098,147,1.04,155,2.138,158,1.439,159,2.386,160,2.386,162,2.386,163,2.386,181,2.386,187,2.138,192,1.261,196,1.872,200,1.57,201,2.893,202,2.386,203,2.386,204,1.503,206,1.958,207,2.68,208,2.68,209,2.68,210,1.958,211,1.958,212,1.462,213,1.006,214,1.272,215,2.203,216,2.893,218,0.857,220,1.635,222,1.958,223,1.123,225,1.755,229,1.958,230,2.138,236,2.893,243,1.272,246,1.03,248,1.14,249,1.272,250,2.048,251,1.585,252,1.754,253,1.754,254,1.14,255,1.14,256,1.14,257,1.14,258,1.272,259,1.14,260,1.272,261,1.272,262,1.272,263,1.272,264,0.714,265,1.272,267,0.935,270,1.272,271,1.272,284,2.212,285,1.272,286,1.272,288,1.272,289,1.272,291,1.958,292,1.272,293,1.272,386,2.697,392,1.272,393,1.438,435,0.853,486,3.496,487,3.113,488,3.113,489,3.113,490,3.113,491,3.496,500,3.113,502,3.113,503,1.659,504,2.554,506,3.496,513,1.659,514,1.438,515,1.659,516,2.212,517,2.212,518,2.212,519,2.212,521,1.659,522,2.212,523,1.438,525,1.659,526,1.659,527,1.659,529,1.659,530,1.659,531,1.659,532,1.438,533,3.113,534,1.659,535,2.554,536,1.659,537,1.659,538,1.659,539,1.659,540,1.659,541,1.659,542,1.659,543,1.659,544,1.659,545,1.659,546,1.659,547,1.659,548,2.554,549,1.438,550,1.659,551,1.659,552,1.659,553,1.438,595,1.438,596,1.996,597,1.996,598,1.996,599,1.996,600,1.996,601,1.996,602,1.996,603,1.996,604,1.996,605,1.996,606,1.996,607,1.996,608,1.996,609,1.996,610,1.996,611,1.996,612,1.996,613,3.072,614,3.072,615,1.996,616,1.996]],["title/modules/WebBluetoothModule.html",[41,1.482,84,2.279]],["body/modules/WebBluetoothModule.html",[0,1.515,1,3.236,3,0.484,4,0.484,5,0.429,6,1.06,7,0.423,8,2.26,11,0.964,12,2.26,13,1.83,14,0.543,15,0.035,16,1.07,17,3.284,18,4.284,19,2.949,20,0.67,21,3.848,22,2.555,23,1.655,24,2.949,25,1.856,26,2.949,27,1.546,28,2.169,29,2.949,30,0.685,31,3.712,32,1.297,33,2.133,34,2.555,35,2.943,36,2.949,37,3.284,38,2.949,39,2.26,40,0.14,41,2.415,42,2.388,43,3.848,44,1.515,45,2.202,46,2.169,47,2.949,48,2.26,49,1.662,50,0.025,51,0.025,69,0.67,86,2.025,142,0.739,145,0.67,147,0.739,192,1.064,218,0.812,232,1.662,617,3.547,618,3.547]],["title/coverage.html",[619,3.567]],["body/coverage.html",[0,1.693,1,1.61,5,0.341,6,1.405,7,0.562,8,3.167,14,0.432,15,0.035,23,1.008,25,1.298,27,0.846,28,1.321,31,3.3,33,1.101,37,1.797,40,0.207,44,2.123,48,1.797,50,0.021,51,0.021,52,1.49,53,1.008,57,2.345,71,1.008,74,1.008,76,1.008,78,1.008,80,1.008,139,2.031,141,2.345,156,3.579,157,3.579,215,2.237,251,2.564,297,1.49,299,2.031,323,5.104,334,2.345,350,2.92,359,1.61,366,2.345,387,4.628,403,1.455,404,2.838,434,1.455,444,1.455,450,1.455,485,3.579,560,2.031,561,2.345,566,3.579,595,3.579,619,2.345,620,2.031,621,2.82,622,2.82,623,2.82,624,4.582,625,6.238,626,2.345,627,2.82,628,2.82,629,3.295,630,3.295,631,2.345,632,2.345,633,4.97,634,3.963,635,2.82,636,2.82,637,2.82,638,2.82,639,3.963,640,2.82,641,2.345,642,3.295,643,2.345,644,2.82,645,2.82]],["title/dependencies.html",[87,2.42,646,1.913]],["body/dependencies.html",[15,0.035,20,0.814,22,3.104,50,0.028,51,0.028,87,2.747,103,4.351,127,1.683,136,2.7,248,2.461,514,3.104,647,4.31,648,6.318,649,4.31,650,4.31,651,4.31,652,4.31,653,4.31,654,4.31,655,4.31,656,4.31,657,4.31,658,4.31,659,3.583,660,4.31,661,4.31,662,4.31,663,4.31,664,4.31,665,4.31,666,4.31,667,4.31,668,4.31,669,4.31]],["title/miscellaneous/functions.html",[670,1.37,671,3.157]],["body/miscellaneous/functions.html",[1,3.143,6,1.073,7,0.429,8,2.988,9,0.567,11,0.976,14,0.718,15,0.031,25,1.913,34,3.377,35,2.677,37,3.723,48,3.507,50,0.03,51,0.03,69,0.885,218,1.073,670,2.419,671,3.898,672,5.843]],["title/index.html",[9,0.321,673,1.913,674,1.913]],["body/index.html",[7,0.451,12,1.366,15,0.035,16,1.019,17,2.067,20,0.739,23,1.763,30,0.473,32,1.28,39,1.366,40,0.155,41,1.52,42,1.674,45,0.916,50,0.017,51,0.017,60,1.267,61,1.52,72,1.672,84,2.337,85,1.224,94,1.366,126,2.045,127,2.059,136,1.106,137,1.783,138,1.16,161,2.494,192,1.536,197,1.783,200,1.727,204,0.766,212,1.926,246,1.674,256,1.224,257,1.224,264,1.676,265,1.366,266,2.697,267,2.196,268,2.697,282,1.674,297,1.198,303,2.697,304,3.628,315,2.697,316,2.697,319,1.852,324,1.674,326,2.697,327,1.783,329,2.337,332,1.783,333,2.697,373,1.783,392,2.067,398,1.783,405,1.224,409,1.224,412,1.224,429,1.106,435,0.916,445,1.224,452,1.224,620,2.819,646,1.544,659,2.697,673,1.544,674,1.544,675,2.144,676,3.244,677,3.244,678,2.144,679,2.144,680,2.144,681,2.144,682,2.144,683,2.144,684,2.144,685,2.144,686,2.144,687,3.897,688,3.244,689,2.144,690,3.244,691,4.364,692,3.244,693,3.244,694,3.244,695,3.244,696,4.931,697,5.121,698,3.244,699,3.244,700,2.144,701,3.244,702,2.144,703,2.144,704,2.144,705,3.244,706,2.144,707,2.144,708,2.144,709,2.144,710,2.144,711,2.144,712,3.244,713,2.144,714,3.244,715,2.144,716,2.144,717,2.144,718,2.144,719,2.697,720,2.144,721,2.144,722,2.144,723,2.144,724,3.244,725,2.144,726,2.144,727,2.144,728,2.144,729,2.144,730,3.244,731,1.783,732,2.144,733,2.144,734,2.144,735,2.144,736,2.144,737,2.144,738,2.144,739,2.144,740,2.144,741,2.144,742,2.144,743,2.144,744,1.783,745,3.244,746,2.144,747,2.144,748,3.244,749,3.244,750,2.144,751,2.144,752,2.144,753,2.697,754,2.144,755,2.144,756,3.244,757,2.144,758,2.144,759,2.144,760,2.144,761,2.144,762,2.144,763,2.144,764,2.144,765,2.144,766,2.144,767,2.144,768,2.144,769,2.337,770,2.697,771,3.254,772,1.783,773,1.783,774,1.783,775,1.783,776,2.697,777,1.783,778,1.783,779,1.783,780,1.783,781,1.783,782,2.697,783,4.488,784,1.783,785,1.783,786,1.783,787,3.254,788,1.783,789,2.697,790,1.783,791,1.783,792,1.783,793,1.783,794,1.783,795,1.783,796,1.783,797,1.783,798,1.783,799,2.697,800,1.783,801,1.783,802,1.783,803,1.783,804,1.783,805,1.783,806,2.697,807,2.697,808,1.783,809,1.783,810,1.783,811,1.783,812,1.783,813,1.783,814,1.783,815,1.783,816,1.783,817,1.783,818,1.783,819,1.783,820,1.783,821,1.783,822,1.783,823,1.783,824,1.783,825,1.783,826,1.783,827,1.783,828,1.783,829,1.783,830,1.783,831,1.783,832,1.783,833,1.783,834,1.783,835,1.783,836,1.783]],["title/license.html",[673,1.913,674,1.913,769,1.913]],["body/license.html",[15,0.027,50,0.027,51,0.027,94,2.53,429,2.048,620,2.86,687,4.136,719,3.301,753,3.301,769,2.86,770,4.136,771,4.518,772,3.301,773,3.301,774,3.301,775,3.301,776,4.136,777,3.301,778,3.301,779,3.301,780,3.301,781,3.301,782,4.136,783,5.151,784,3.301,785,3.301,786,3.301,787,4.518,788,3.301,789,4.136,790,3.301,791,3.301,792,3.301,793,3.301,794,3.301,795,3.301,796,3.301,797,3.301,798,3.301,799,4.136,800,3.301,801,3.301,802,3.301,803,3.301,804,3.301,805,3.301,806,4.136,807,4.136,808,3.301,809,3.301,810,3.301,811,3.301,812,3.301,813,3.301,814,3.301,815,3.301,816,3.301,817,3.301,818,3.301,819,3.301,820,3.301,821,3.301,822,3.301,823,3.301,824,3.301,825,3.301,826,3.301,827,3.301,828,3.301,829,3.301,830,3.301,831,3.301,832,3.301,833,3.301,834,3.301,835,3.301,836,3.301]],["title/modules.html",[86,2.45]],["body/modules.html",[15,0.03,41,2.295,50,0.03,51,0.03,85,2.796,86,2.796,136,2.526,343,4.071,837,4.897,838,5.645,839,4.897,840,4.071]],["title/overview.html",[841,3.567]],["body/overview.html",[2,3.016,15,0.034,41,2.608,50,0.028,51,0.028,53,2.196,54,1.962,71,1.99,74,1.99,76,1.99,78,1.99,80,1.99,85,3.676,86,2.391,87,3.277,88,3.481,89,3.481,90,3.481,91,3.481,92,4.275,93,3.481,94,2.668,140,2.16,298,2.16,731,4.275,744,3.481,841,3.481,842,5.143]],["title/properties.html",[10,1.042,646,1.913]],["body/properties.html",[10,1.367,15,0.032,50,0.031,51,0.031,843,4.98,844,4.98]],["title/miscellaneous/typealiases.html",[670,1.37,845,3.798]],["body/miscellaneous/typealiases.html",[6,1.096,7,0.438,9,0.579,14,0.902,15,0.03,50,0.03,51,0.03,299,3.45,308,4.634,475,4.014,626,3.983,670,2.471,846,4.791,847,5.574,848,4.791,849,4.791]],["title/miscellaneous/variables.html",[670,1.37,850,3.157]],["body/miscellaneous/variables.html",[6,0.352,7,0.141,9,0.186,14,0.691,15,0.035,23,1.864,25,1.54,27,1.411,33,1.837,44,2.01,45,2.01,46,2.204,49,2.204,50,0.013,51,0.013,72,0.657,81,0.721,138,0.55,156,1.108,157,2.618,161,0.98,192,1.654,200,1.841,215,2.356,232,2.584,251,2.69,252,2.686,253,2.686,254,2.075,255,2.075,302,1.279,380,1.108,435,0.657,485,1.108,564,2.624,566,1.108,595,1.108,629,1.279,630,2.624,631,2.077,632,2.077,641,1.279,642,3.022,643,1.279,670,0.793,840,2.624,850,1.279,851,3.157,852,3.157,853,3.157,854,3.157,855,1.538,856,1.538,857,2.499,858,2.499,859,1.538,860,1.538,861,1.538,862,1.538,863,6.323,864,6.323,865,6.323,866,6.323,867,1.538,868,1.538,869,1.538,870,1.538,871,1.538,872,1.538,873,1.538,874,1.538,875,1.538,876,1.538,877,1.538,878,1.538,879,1.538,880,1.538,881,1.538,882,1.538,883,1.538,884,1.538,885,1.538,886,1.538,887,1.538,888,4.997,889,1.538,890,4.704,891,1.538,892,4.704,893,1.538,894,1.538,895,1.538,896,1.538,897,1.538,898,1.538,899,1.538,900,1.538,901,1.538,902,1.538,903,3.157,904,3.157,905,1.538,906,1.538,907,1.538,908,1.538,909,1.538,910,1.538,911,1.538,912,1.538,913,1.538,914,1.538,915,1.538,916,1.538,917,1.538,918,1.538,919,1.538,920,1.538,921,1.538,922,1.538,923,1.538,924,1.538,925,1.538,926,1.538,927,1.538,928,1.538,929,1.538,930,1.538,931,1.538,932,1.538,933,1.538,934,1.538,935,1.538,936,1.538,937,1.538,938,1.538,939,1.538,940,1.538,941,1.538,942,1.538,943,1.538,944,1.538,945,1.538,946,1.538,947,1.538,948,1.538,949,1.538,950,1.538,951,1.538,952,1.538,953,1.538,954,1.538,955,1.538,956,1.538,957,1.538,958,1.538,959,1.538,960,1.538,961,1.538,962,1.538]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{},"coverage.html":{}}}],["0.0.6",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":193,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["000000",{"_index":539,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["000000000000",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0451",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["1.35.0",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":616,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["10px",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["112px",{"_index":568,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["120px",{"_index":180,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["15.0.0",{"_index":844,"title":{},"body":{"properties.html":{}}}],["15.1.5",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["16px",{"_index":487,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["17",{"_index":541,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["2",{"_index":731,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.3.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["2.a",{"_index":686,"title":{},"body":{"index.html":{}}}],["2.b",{"_index":706,"title":{},"body":{"index.html":{}}}],["2017",{"_index":773,"title":{},"body":{"index.html":{},"license.html":{}}}],["20px",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["21/31",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["214px",{"_index":569,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["222px",{"_index":178,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["24px",{"_index":183,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["255px",{"_index":191,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["258px",{"_index":571,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["29.0.5",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":734,"title":{},"body":{"index.html":{}}}],["32px",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["38px",{"_index":572,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["4",{"_index":739,"title":{},"body":{"index.html":{}}}],["4000",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40px",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4933",{"_index":517,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["5",{"_index":744,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.1.1",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["52ffa9740042",{"_index":519,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["55px",{"_index":570,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["5em",{"_index":174,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["5px",{"_index":188,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["6",{"_index":842,"title":{},"body":{"overview.html":{}}}],["67",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["700px",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["90px",{"_index":186,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["9b10",{"_index":518,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["9b35",{"_index":516,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["__register__",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_config",{"_index":301,"title":{},"body":{"injectables/BleService.html":{}}}],["above",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolute",{"_index":176,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["abstract",{"_index":716,"title":{},"body":{"index.html":{}}}],["accelerometer",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceptalldevices",{"_index":728,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":211,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["action",{"_index":830,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["addeventlistener",{"_index":408,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["addeventlistener(type",{"_index":417,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["address",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advanced",{"_index":707,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":170,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["and/or",{"_index":797,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":22,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["angular/material/toolbar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["annotated",{"_index":692,"title":{},"body":{"index.html":{}}}],["api",{"_index":745,"title":{},"body":{"index.html":{}}}],["app",{"_index":761,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":85,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":139,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["args",{"_index":354,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["arising",{"_index":834,"title":{},"body":{"index.html":{},"license.html":{}}}],["ask",{"_index":740,"title":{},"body":{"index.html":{}}}],["associated",{"_index":784,"title":{},"body":{"index.html":{},"license.html":{}}}],["authors",{"_index":823,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["available",{"_index":840,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["awboptions",{"_index":1,"title":{"interfaces/AWBOptions.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b",{"_index":252,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["b000",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["barometer",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battery",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["battery_charging_full",{"_index":194,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["battery_level",{"_index":268,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["battery_service",{"_index":266,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["batterylevelcomponent",{"_index":71,"title":{"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterylevelservice",{"_index":695,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":738,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_primary_service",{"_index":730,"title":{},"body":{"index.html":{}}}],["ble",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["ble.service",{"_index":249,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["blecore",{"_index":251,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice",{"_index":215,"title":{"injectables/BleService.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice(b",{"_index":255,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":181,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["blog",{"_index":759,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{},"index.html":{}}}],["bluetooth.service",{"_index":24,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts",{"_index":8,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts:32",{"_index":618,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.service.ts",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bluetooth/src/lib/lang/uuids/ti",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetooth/src/lib/logger.service.ts",{"_index":350,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/logger.service.ts:13",{"_index":356,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:16",{"_index":353,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:19",{"_index":358,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:28",{"_index":558,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:29",{"_index":557,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:30",{"_index":559,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:4",{"_index":555,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:5",{"_index":554,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:6",{"_index":556,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/platform/browser.ts",{"_index":334,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/browser.ts:14",{"_index":339,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/browser.ts:5",{"_index":336,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/server.ts",{"_index":561,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/server.ts:5",{"_index":562,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["bluetooth/src/lib/test.utils.ts",{"_index":404,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/test.utils.ts:103",{"_index":471,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:12",{"_index":411,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:14",{"_index":414,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:17",{"_index":420,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:24",{"_index":422,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:29",{"_index":421,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:39",{"_index":476,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:41",{"_index":477,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:45",{"_index":478,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:50",{"_index":480,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:54",{"_index":479,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:60",{"_index":482,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:61",{"_index":483,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:65",{"_index":484,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:7",{"_index":413,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:71",{"_index":468,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:72",{"_index":467,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:73",{"_index":465,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:74",{"_index":466,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:78",{"_index":463,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:8",{"_index":416,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:86",{"_index":472,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:90",{"_index":469,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:97",{"_index":470,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth_disabled",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetooth_searching",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetoothcharacteristicproperties",{"_index":451,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcharacteristicuuid",{"_index":448,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcore",{"_index":23,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bluetoothcore(b",{"_index":254,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["bluetoothremotegattcharacteristic",{"_index":742,"title":{},"body":{"index.html":{}}}],["bluetoothremotegattserver",{"_index":412,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["bluetoothremotegattservice",{"_index":736,"title":{},"body":{"index.html":{}}}],["bluetoothserviceuuid",{"_index":441,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["boolean",{"_index":13,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"modules/WebBluetoothModule.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["bordervisible",{"_index":537,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["bottom",{"_index":190,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["browse",{"_index":838,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser's",{"_index":685,"title":{},"body":{"index.html":{}}}],["browser.get(browser.baseurl",{"_index":151,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwebbluetooth",{"_index":25,"title":{"injectables/BrowserWebBluetooth.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["c",{"_index":772,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":696,"title":{},"body":{"index.html":{}}}],["can't",{"_index":715,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":486,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["card",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cc2650",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":166,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["changelog",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["changevalue",{"_index":462,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["changevalue(value",{"_index":460,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["characteristic",{"_index":267,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["characteristics",{"_index":445,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["characteristicvaluechanged",{"_index":454,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["charge",{"_index":779,"title":{},"body":{"index.html":{},"license.html":{}}}],["chart",{"_index":488,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["chartref",{"_index":489,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["checkout",{"_index":757,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":775,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":826,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":40,"title":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":140,"title":{},"body":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"overview.html":{}}}],["clear",{"_index":409,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["close",{"_index":293,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":195,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["command",{"_index":754,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["component",{"_index":52,"title":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["components",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"overview.html":{}}}],["conditions",{"_index":804,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":302,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/variables.html":{}}}],["config(options",{"_index":307,"title":{},"body":{"injectables/BleService.html":{}}}],["configuration",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["connected",{"_index":282,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["connection",{"_index":835,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":197,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["console.error.apply(console",{"_index":364,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.log('getting",{"_index":705,"title":{},"body":{"index.html":{}}}],["console.log('reading",{"_index":549,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["console.log.apply(console",{"_index":363,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.warn.apply(console",{"_index":365,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["consoleloggerservice",{"_index":27,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consoleloggerserviceconfig",{"_index":48,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["consoleloggerserviceconfig(options",{"_index":34,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":250,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor(ble",{"_index":305,"title":{},"body":{"injectables/BleService.html":{}}}],["constructor(device",{"_index":474,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(id",{"_index":410,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["constructor(properties",{"_index":455,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(public",{"_index":324,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["constructor(service",{"_index":214,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["container",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{}}}],["content",{"_index":153,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["contract",{"_index":831,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributions",{"_index":763,"title":{},"body":{"index.html":{}}}],["control",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":799,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":782,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":771,"title":{},"body":{"index.html":{},"license.html":{}}}],["correctly",{"_index":681,"title":{},"body":{"index.html":{}}}],["count",{"_index":587,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["counter",{"_index":593,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["coverage",{"_index":619,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current_used_parameters",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":288,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["damages",{"_index":827,"title":{},"body":{"index.html":{},"license.html":{}}}],["dashboard",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["dashboard.component.css",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcomponent",{"_index":74,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataview",{"_index":264,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["deal",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":836,"title":{},"body":{"index.html":{},"license.html":{}}}],["decimal",{"_index":614,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["decoder",{"_index":263,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["decoder(value",{"_index":317,"title":{},"body":{"injectables/BleService.html":{}}}],["decorators",{"_index":503,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["default",{"_index":232,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":145,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["demo",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":49,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":348,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["determinate",{"_index":238,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["dev.to",{"_index":760,"title":{},"body":{"index.html":{}}}],["developer",{"_index":718,"title":{},"body":{"index.html":{}}}],["device",{"_index":212,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["device.gatt",{"_index":437,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["device.name",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device_id",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_information",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devicesubscription",{"_index":198,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["direction",{"_index":167,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["directions_walk",{"_index":573,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["directive",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["disconnect",{"_index":204,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["disconnect_request",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disconnectdevice",{"_index":303,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["disconnected",{"_index":283,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["discover",{"_index":724,"title":{},"body":{"index.html":{}}}],["discovery",{"_index":726,"title":{},"body":{"index.html":{}}}],["display",{"_index":163,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["distribute",{"_index":795,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentation",{"_index":620,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["dynamic",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":141,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":146,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":260,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["easiest",{"_index":689,"title":{},"body":{"index.html":{}}}],["ef680200",{"_index":515,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ef680201",{"_index":612,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["ef680203",{"_index":520,"title":{},"body":{"components/HumidityComponent.html":{}}}],["ef680400",{"_index":591,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["ef680405",{"_index":592,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["element(by.css('app",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":502,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["elsewhere",{"_index":717,"title":{},"body":{"index.html":{}}}],["emites",{"_index":721,"title":{},"body":{"index.html":{}}}],["emitted",{"_index":699,"title":{},"body":{"index.html":{}}}],["enable",{"_index":683,"title":{},"body":{"index.html":{}}}],["enabletracing",{"_index":12,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["environment",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":225,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["error('your",{"_index":342,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["error(...args",{"_index":352,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["error(args",{"_index":361,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["event",{"_index":429,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{},"license.html":{}}}],["eventlistener",{"_index":419,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["example",{"_index":693,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["express",{"_index":814,"title":{},"body":{"index.html":{},"license.html":{}}}],["f000180a",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000180f",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a19",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a23",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a24",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a25",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a26",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a27",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a28",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a29",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a2a",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a50",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa00",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa01",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa02",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa03",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa10",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa11",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa12",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa13",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa20",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa21",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa22",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa23",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa30",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa31",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa32",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa33",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa40",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa41",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa42",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa44",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa50",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa51",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa52",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa53",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa64",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa65",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa66",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa70",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa71",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa72",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa73",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa80",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa81",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa82",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa83",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac00",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac01",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac02",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac03",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc0",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc1",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc2",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc3",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc0",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc1",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc2",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc3",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc4",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe0",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe1",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakebluetoothdevice",{"_index":403,"title":{"classes/FakeBluetoothDevice.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattcharacteristic",{"_index":450,"title":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattserver",{"_index":434,"title":{"classes/FakeBluetoothRemoteGATTServer.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattservice",{"_index":444,"title":{"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["false",{"_index":435,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":765,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":545,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ffffff",{"_index":534,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["files",{"_index":785,"title":{},"body":{"index.html":{},"license.html":{}}}],["fillstyle",{"_index":533,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["firmware_rev",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":819,"title":{},"body":{"index.html":{},"license.html":{}}}],["flex",{"_index":164,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["following",{"_index":753,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":172,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["fontsize",{"_index":540,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["forroot",{"_index":617,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["forroot(options",{"_index":43,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["found",{"_index":746,"title":{},"body":{"index.html":{}}}],["free",{"_index":719,"title":{},"body":{"index.html":{},"license.html":{}}}],["full",{"_index":758,"title":{},"body":{"index.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["functions",{"_index":671,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":802,"title":{},"body":{"index.html":{},"license.html":{}}}],["gatt",{"_index":405,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["gatt_characteristic_battery_level",{"_index":709,"title":{},"body":{"index.html":{}}}],["gatt_primary_service",{"_index":710,"title":{},"body":{"index.html":{}}}],["gattserverdisconnected",{"_index":415,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic",{"_index":481,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic(characteristic",{"_index":447,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getdevice",{"_index":246,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["getdevicestatus",{"_index":205,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["getprimaryservice",{"_index":473,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["getprimaryservice(service",{"_index":440,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getting",{"_index":673,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitletext",{"_index":143,"title":{},"body":{"classes/AppPage.html":{}}}],["given",{"_index":700,"title":{},"body":{"index.html":{}}}],["granted",{"_index":778,"title":{},"body":{"index.html":{},"license.html":{}}}],["graph",{"_index":839,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["gyroscope",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hardware_rev",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haserror",{"_index":206,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["haserror(error",{"_index":222,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["help",{"_index":768,"title":{},"body":{"index.html":{}}}],["here",{"_index":691,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":777,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":824,"title":{},"body":{"index.html":{},"license.html":{}}}],["host",{"_index":162,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["http://caniuse.com/#search=bluetooth",{"_index":346,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["https://manekinekko.github.io/angular",{"_index":747,"title":{},"body":{"index.html":{}}}],["humidity",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"miscellaneous/variables.html":{}}}],["humidity'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["humiditycomponent",{"_index":76,"title":{"components/HumidityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["icon",{"_index":189,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["id",{"_index":406,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["identifier",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["ieee11073",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_block_request",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_count",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_notify",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_status",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":158,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["implied",{"_index":815,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["imports",{"_index":39,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["included",{"_index":808,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":789,"title":{},"body":{"index.html":{},"license.html":{}}}],["indeterminate",{"_index":280,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["initchart",{"_index":491,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["initialvalue",{"_index":453,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["injectable",{"_index":297,"title":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":298,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"overview.html":{}}}],["injectiontoken",{"_index":19,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["injectiontoken('awboptions",{"_index":38,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["install",{"_index":676,"title":{},"body":{"index.html":{}}}],["installed",{"_index":680,"title":{},"body":{"index.html":{}}}],["instance",{"_index":259,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["integer",{"_index":613,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"overview.html":{}}}],["interpolation",{"_index":531,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["io",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":767,"title":{},"body":{"index.html":{}}}],["it/conventional",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["jest",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":165,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["key",{"_index":318,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["keypress",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":813,"title":{},"body":{"index.html":{},"license.html":{}}}],["l",{"_index":253,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":538,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["layoutmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":187,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["length",{"_index":528,"title":{},"body":{"components/HumidityComponent.html":{}}}],["level",{"_index":161,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["level'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["level.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.ts",{"_index":157,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["level.component.ts:115",{"_index":228,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:120",{"_index":231,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:126",{"_index":219,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:132",{"_index":224,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:136",{"_index":226,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:66",{"_index":244,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:67",{"_index":239,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:68",{"_index":234,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:69",{"_index":245,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:70",{"_index":242,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:71",{"_index":237,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:73",{"_index":247,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:75",{"_index":217,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:78",{"_index":240,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:79",{"_index":241,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:80",{"_index":235,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:89",{"_index":227,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:99",{"_index":221,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["liability",{"_index":828,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":825,"title":{},"body":{"index.html":{},"license.html":{}}}],["license",{"_index":769,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":790,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":816,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":322,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["linewidth",{"_index":544,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["list",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["listener",{"_index":418,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listener(mockedevent",{"_index":428,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listeners",{"_index":407,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["literal",{"_index":475,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["log",{"_index":351,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(...args",{"_index":355,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(args",{"_index":360,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["logger",{"_index":359,"title":{"interfaces/Logger.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["logger.service",{"_index":29,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["logic",{"_index":713,"title":{},"body":{"index.html":{}}}],["logs",{"_index":684,"title":{},"body":{"index.html":{}}}],["magnetometer",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":256,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["makemetokeninjector",{"_index":37,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manekinekko/angular",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["manifacturer",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":315,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["map((value",{"_index":701,"title":{},"body":{"index.html":{}}}],["map(this._config.decoder",{"_index":328,"title":{},"body":{"injectables/BleService.html":{}}}],["margin",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["mat",{"_index":184,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["matbuttonmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":216,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["matsnackbarmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{}}}],["merchantability",{"_index":818,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":793,"title":{},"body":{"index.html":{},"license.html":{}}}],["mergemap",{"_index":708,"title":{},"body":{"index.html":{}}}],["mergemap((characteristic",{"_index":741,"title":{},"body":{"index.html":{}}}],["mergemap((gatt",{"_index":732,"title":{},"body":{"index.html":{}}}],["mergemap((primaryservice",{"_index":735,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["method",{"_index":697,"title":{},"body":{"index.html":{}}}],["methods",{"_index":142,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["miscellaneous",{"_index":670,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":675,"title":{},"body":{"index.html":{}}}],["mit",{"_index":770,"title":{},"body":{"index.html":{},"license.html":{}}}],["mocked",{"_index":563,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["mockedevent",{"_index":424,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["mode",{"_index":199,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["model",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model_number",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":792,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":84,"title":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":18,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["more",{"_index":347,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{}}}],["more_vert",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["movement",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["navigateto",{"_index":144,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator.bluetooth",{"_index":340,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["need",{"_index":748,"title":{},"body":{"index.html":{}}}],["new",{"_index":33,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":321,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["ngmodule",{"_index":17,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":207,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngoninit",{"_index":208,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["node_modules",{"_index":682,"title":{},"body":{"index.html":{}}}],["nologgerservice",{"_index":28,"title":{"injectables/NoLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["noninfringement",{"_index":822,"title":{},"body":{"index.html":{},"license.html":{}}}],["note",{"_index":679,"title":{},"body":{"index.html":{}}}],["notice",{"_index":806,"title":{},"body":{"index.html":{},"license.html":{}}}],["notifications",{"_index":704,"title":{},"body":{"index.html":{}}}],["now",{"_index":565,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["npm",{"_index":677,"title":{},"body":{"index.html":{}}}],["null",{"_index":243,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["number",{"_index":230,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["oad",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":564,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"miscellaneous/variables.html":{}}}],["object.keys(titag).map(key",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":781,"title":{},"body":{"index.html":{},"license.html":{}}}],["of(this.haserror.bind(this",{"_index":524,"title":{},"body":{"components/HumidityComponent.html":{}}}],["ondestroy",{"_index":160,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["oninit",{"_index":159,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["open",{"_index":766,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["optionalservices",{"_index":729,"title":{},"body":{"index.html":{}}}],["options",{"_index":35,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["options.enabletracing",{"_index":36,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["otherwise",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":841,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":646,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parameters",{"_index":218,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":820,"title":{},"body":{"index.html":{},"license.html":{}}}],["period",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":776,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":800,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":801,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":332,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["platform/browser",{"_index":26,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["pnp_id",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["position",{"_index":175,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["post",{"_index":756,"title":{},"body":{"index.html":{}}}],["pr",{"_index":762,"title":{},"body":{"index.html":{}}}],["primary",{"_index":233,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["private",{"_index":300,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["process",{"_index":727,"title":{},"body":{"index.html":{}}}],["production",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":185,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["project",{"_index":750,"title":{},"body":{"index.html":{}}}],["projects/.../bluetooth.module.ts",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bluetooth.service.ts",{"_index":848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ti",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/manekinekko/angular",{"_index":6,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":148,"title":{},"body":{"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["promise.resolve(this",{"_index":439,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.characteristics[characteristic",{"_index":449,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.services[service].service",{"_index":442,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.value",{"_index":459,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"properties.html":{}}}],["protractor",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":45,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":811,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":319,"title":{},"body":{"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["providers",{"_index":44,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":196,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["publish",{"_index":794,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":821,"title":{},"body":{"index.html":{},"license.html":{}}}],["read",{"_index":723,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":452,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["readvalue",{"_index":458,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["readvalueoptions",{"_index":847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["release",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["request_new_parameters",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestdevice",{"_index":335,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdevice(options",{"_index":337,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdeviceoptions",{"_index":338,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requested",{"_index":722,"title":{},"body":{"index.html":{}}}],["requestvalue",{"_index":209,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restriction",{"_index":788,"title":{},"body":{"index.html":{},"license.html":{}}}],["results",{"_index":50,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["returns",{"_index":147,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["rgba(119,119,119,0.18",{"_index":536,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["rgba(255,161,161,0.30",{"_index":546,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["right",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["rights",{"_index":791,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["root'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["row",{"_index":168,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["run",{"_index":752,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":248,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":316,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["s",{"_index":678,"title":{},"body":{"index.html":{}}}],["section",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":345,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["sell",{"_index":798,"title":{},"body":{"index.html":{},"license.html":{}}}],["sensortag2.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serial_number",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["series",{"_index":490,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["serverwebbluetooth",{"_index":560,"title":{"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["serves",{"_index":751,"title":{},"body":{"index.html":{}}}],["service",{"_index":200,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service.config",{"_index":262,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["service/component",{"_index":688,"title":{},"body":{"index.html":{}}}],["serviceoptions",{"_index":308,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/typealiases.html":{}}}],["services",{"_index":436,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["shall",{"_index":807,"title":{},"body":{"index.html":{},"license.html":{}}}],["singleton",{"_index":258,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["size",{"_index":173,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["smart",{"_index":344,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["smoothie",{"_index":514,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["smoothiechart",{"_index":500,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["snackbar",{"_index":201,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["software",{"_index":783,"title":{},"body":{"index.html":{},"license.html":{}}}],["software_rev",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["span",{"_index":171,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["span')).gettext",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["specific",{"_index":714,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{}}}],["src/.../battery",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ble.service.ts",{"_index":849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../humidity.component.ts",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepcounter.component.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temperature.component.ts",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/ble.service.ts",{"_index":299,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ble.service.ts:17",{"_index":306,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:19",{"_index":314,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:21",{"_index":309,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:25",{"_index":311,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:29",{"_index":312,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:35",{"_index":313,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:46",{"_index":310,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":366,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:8",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/thingy52/battery",{"_index":156,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts",{"_index":485,"title":{},"body":{"components/HumidityComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts:104",{"_index":494,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:108",{"_index":496,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:38",{"_index":507,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:39",{"_index":501,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:40",{"_index":511,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:41",{"_index":510,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:44",{"_index":505,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:46",{"_index":512,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:48",{"_index":492,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:51",{"_index":508,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:52",{"_index":509,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:61",{"_index":497,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:71",{"_index":495,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:81",{"_index":498,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:90",{"_index":499,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:97",{"_index":493,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts",{"_index":566,"title":{},"body":{"components/StepCounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/stepcounter.component.ts:50",{"_index":585,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:51",{"_index":583,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:52",{"_index":584,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:54",{"_index":586,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:56",{"_index":574,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:59",{"_index":581,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:60",{"_index":582,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:75",{"_index":578,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:80",{"_index":579,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:85",{"_index":580,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:90",{"_index":575,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:95",{"_index":576,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:99",{"_index":577,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/temperature.component.ts",{"_index":595,"title":{},"body":{"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/temperature.component.ts:105",{"_index":597,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:112",{"_index":598,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:116",{"_index":600,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:38",{"_index":606,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:39",{"_index":604,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:40",{"_index":610,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:41",{"_index":609,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:44",{"_index":605,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:46",{"_index":611,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:48",{"_index":596,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:51",{"_index":607,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:52",{"_index":608,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:66",{"_index":601,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:73",{"_index":599,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:94",{"_index":602,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:99",{"_index":603,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startblog",{"_index":755,"title":{},"body":{"index.html":{}}}],["started",{"_index":674,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":749,"title":{},"body":{"index.html":{}}}],["state",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":42,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["step",{"_index":532,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcounter",{"_index":567,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["stepcounter'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcountercomponent",{"_index":78,"title":{"components/StepCounterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sticky",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["stop",{"_index":702,"title":{},"body":{"index.html":{}}}],["stream",{"_index":304,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["streamsubscription",{"_index":202,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["string",{"_index":223,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["strokestyle",{"_index":535,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["styles",{"_index":155,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["styleurls",{"_index":368,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subject",{"_index":803,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicense",{"_index":796,"title":{},"body":{"index.html":{},"license.html":{}}}],["subscribe",{"_index":522,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["subscribe((value",{"_index":272,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribe(device",{"_index":276,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribed",{"_index":703,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":236,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["substantial",{"_index":809,"title":{},"body":{"index.html":{},"license.html":{}}}],["sup",{"_index":182,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["support",{"_index":343,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"modules.html":{}}}],["sure",{"_index":257,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["svg",{"_index":837,"title":{},"body":{"modules.html":{}}}],["system_id",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":425,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["temperature",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["temperaturecomponent",{"_index":80,"title":{"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["templateurl",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{}}}],["text",{"_index":169,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["thingy52/battery",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/humidity.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/stepcounter.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/temperature.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["this._config",{"_index":325,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.characteristic",{"_index":331,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.service",{"_index":330,"title":{},"body":{"injectables/BleService.html":{}}}],["this.ble",{"_index":329,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"index.html":{}}}],["this.ble.disconnectdevice",{"_index":333,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.getcharacteristic$(primaryservice",{"_index":737,"title":{},"body":{"index.html":{}}}],["this.ble.getdevice",{"_index":326,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":733,"title":{},"body":{"index.html":{}}}],["this.ble.readvalue$(characteristic",{"_index":743,"title":{},"body":{"index.html":{}}}],["this.ble.requestdevice(options",{"_index":349,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this.ble.streamvalues$().pipe",{"_index":327,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.streamvalues$().pipe(map((value",{"_index":711,"title":{},"body":{"index.html":{}}}],["this.characteristics.service",{"_index":446,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.chart",{"_index":529,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.addtimeseries(this.series",{"_index":543,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.start",{"_index":551,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.stop",{"_index":548,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.streamto(canvas",{"_index":547,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chartref.nativeelement",{"_index":527,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.color",{"_index":277,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.connected",{"_index":438,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.console.log('reading",{"_index":287,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.device.disconnect",{"_index":443,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.devicesubscription",{"_index":275,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription.unsubscribe",{"_index":290,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription?.unsubscribe",{"_index":295,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.getdevicestatus",{"_index":269,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror(error",{"_index":274,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror.bind(this",{"_index":284,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.id",{"_index":430,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.initchart",{"_index":521,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.initialvalue",{"_index":457,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners",{"_index":433,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.characteristicvaluechanged.foreach(listener",{"_index":461,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.gattserverdisconnected.foreach(listener",{"_index":427,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners[type",{"_index":423,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.mode",{"_index":279,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.name",{"_index":432,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.properties",{"_index":456,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.series",{"_index":525,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.append(date.now",{"_index":550,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.clear",{"_index":552,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.disconnectdevice",{"_index":289,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.getdevice",{"_index":261,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.stream",{"_index":271,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.value",{"_index":286,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.snackbar.open(error",{"_index":292,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription",{"_index":270,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":553,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription?.unsubscribe",{"_index":296,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.updatevalue(value",{"_index":273,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.updatevalue.bind(this",{"_index":523,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.value",{"_index":281,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/StepCounterComponent.html":{}}}],["this.valuessubscription",{"_index":285,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription.unsubscribe",{"_index":291,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription?.unsubscribe",{"_index":294,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["throw",{"_index":341,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["ti_sensorag_services",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":589,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["timeseries",{"_index":506,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["titag",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["titag[key].service",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar.mat",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tooltip",{"_index":542,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["top",{"_index":177,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["tort",{"_index":832,"title":{},"body":{"index.html":{},"license.html":{}}}],["tree",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["trigger",{"_index":725,"title":{},"body":{"index.html":{}}}],["true",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":320,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":845,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/web",{"_index":659,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["undefined",{"_index":431,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["unknown",{"_index":426,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["updatevalue",{"_index":210,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["updatevalue(value",{"_index":229,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["use",{"_index":687,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":46,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":47,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["using",{"_index":694,"title":{},"body":{"index.html":{}}}],["value",{"_index":192,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.count",{"_index":594,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getint8(0",{"_index":265,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["value.getuint32(0",{"_index":588,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint32(4",{"_index":590,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint8(0",{"_index":712,"title":{},"body":{"index.html":{}}}],["value.getuint8(1",{"_index":615,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["values",{"_index":698,"title":{},"body":{"index.html":{}}}],["valuessubscription",{"_index":203,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["variable",{"_index":323,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{}}}],["variables",{"_index":850,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":843,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":513,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["viewchild('chart",{"_index":504,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["void",{"_index":220,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["want",{"_index":720,"title":{},"body":{"index.html":{}}}],["warn",{"_index":278,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(...args",{"_index":357,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(args",{"_index":362,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warranties",{"_index":817,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":812,"title":{},"body":{"index.html":{},"license.html":{}}}],["wassim",{"_index":774,"title":{},"body":{"index.html":{},"license.html":{}}}],["way",{"_index":690,"title":{},"body":{"index.html":{}}}],["web",{"_index":7,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["webbluetoothmodule",{"_index":41,"title":{"modules/WebBluetoothModule.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["webbluetoothmodule.forroot",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcome",{"_index":764,"title":{},"body":{"index.html":{}}}],["whether",{"_index":829,"title":{},"body":{"index.html":{},"license.html":{}}}],["width",{"_index":179,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["window.smoothiechart",{"_index":530,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["window.timeseries",{"_index":526,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["without",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":464,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["z",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.js",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AWBOptions.html":{"url":"interfaces/AWBOptions.html","title":"interface - AWBOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AWBOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enableTracing\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableTracing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableTracing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BatteryLevelComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            HumidityComponent\n                        \n                        \n                            StepCounterComponent\n                        \n                        \n                            TemperatureComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WebBluetoothModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './thingy52/battery-level.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HumidityComponent } from './thingy52/humidity.component';\nimport { StepCounterComponent } from './thingy52/stepcounter.component';\nimport { TemperatureComponent } from './thingy52/temperature.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BatteryLevelComponent,\n    TemperatureComponent,\n    HumidityComponent,\n    StepCounterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTitleText\n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryLevelComponent.html":{"url":"components/BatteryLevelComponent.html","title":"component - BatteryLevelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BatteryLevelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/battery-level.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-battery-level\n            \n\n\n            \n                styles\n                \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  \n            \n\n            \n                template\n                {{ value || \"000\" }}%\n\n\nbattery_charging_full\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Public\n                                console\n                            \n                            \n                                deviceSubscription\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar, console: ConsoleLoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/battery-level.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                        ConsoleLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceStatus\n                        \n                    \n                \n            \n            \n                \ngetDeviceStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConsoleLoggerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'determinate'\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/battery-level.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/battery-level.component.ts:73\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n\n@Component({\n  selector: 'ble-battery-level',\n  template: `\n    {{ value || \"000\" }}%\n    \n    \n    battery_charging_full\n  `,\n  styles: [`\n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  `],\n  providers: PROVIDERS\n})\nexport class BatteryLevelComponent implements OnInit, OnDestroy {\n  value = null;\n  mode = 'determinate';\n  color = 'primary';\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  deviceSubscription: Subscription;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar,\n    public console: ConsoleLoggerService) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt8(0),\n      service: 'battery_service',\n      characteristic: 'battery_level'\n    });\n  }\n\n  ngOnInit() {\n    this.getDeviceStatus();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe((value: number) => {\n        this.updateValue(value);\n      }, error => this.hasError(error));\n\n  }\n\n  getDeviceStatus() {\n    this.deviceSubscription = this.service.getDevice()\n      .subscribe(device => {\n        if (device) {\n          this.color = 'warn';\n          this.mode = 'indeterminate';\n          this.value = null;\n        } else {\n          // device not connected or disconnected\n          this.value = null;\n          this.mode = 'determinate';\n          this.color = 'primary';\n        }\n      }, this.hasError.bind(this));\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe((value: number) => this.updateValue(value), error => this.hasError(error));\n  }\n\n  updateValue(value: number) {\n    this.console.log('Reading battery level %d', value);\n    this.value = value;\n    this.mode = 'determinate';\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.deviceSubscription.unsubscribe();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription?.unsubscribe();\n    this.deviceSubscription?.unsubscribe();\n    this.streamSubscription?.unsubscribe();\n  }\n}\n\n\n    \n\n\n    \n            \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}%battery_charging_full'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryLevelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BleService.html":{"url":"injectables/BleService.html","title":"injectable - BleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ble.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Public\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disconnectDevice\n                            \n                            \n                                getDevice\n                            \n                            \n                                stream\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/ble.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                        BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n            \n                \nconfig(options: ServiceOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ServiceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectDevice\n                        \n                    \n                \n            \n            \n                \ndisconnectDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevice\n                        \n                    \n                \n            \n            \n                \ngetDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stream\n                        \n                    \n                \n            \n            \n                \nstream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/ble.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BluetoothCore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/ble.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\ntype ServiceOptions = {\n    characteristic: string;\n    service: string,\n    decoder(value: DataView): number | {[key: string]: number}\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleService {\n\n    // tslint:disable-next-line: variable-name\n    private _config: ServiceOptions;\n\n  constructor(public ble: BluetoothCore) {}\n\n  config(options: ServiceOptions) {\n    this._config = options;\n  }\n\n  getDevice() {\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    return this.ble.streamValues$().pipe(\n      map(this._config.decoder)\n    );\n  }\n\n  value() {\n    return this.ble\n      .value$({\n        service: this._config.service,\n        characteristic: this._config.characteristic\n      })\n      .pipe(\n        map(this._config.decoder)\n      );\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserWebBluetooth.html":{"url":"injectables/BrowserWebBluetooth.html","title":"injectable - BrowserWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrowserWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        requestDevice\n                        \n                    \n                \n            \n            \n                \nrequestDevice(options: RequestDeviceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RequestDeviceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ble\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private ble;\n\n  constructor() {\n    this.ble = navigator.bluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise {\n    return this.ble.requestDevice(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  Angular Web BLE Demo\n\n\n\n  \n\n    \n\n    \n      \n        \n          \n            Battery Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Humidity Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Temperature\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                section {\n  padding: 40px;\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n\nimg {\n  width: 32px;\n  margin: 0 10px;\n}\n\n.mat-icon {\n  margin: 0 10px 0 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Angular Web BLE Demo                                              Battery Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Humidity Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Temperature                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothDevice.html":{"url":"classes/FakeBluetoothDevice.html","title":"class - FakeBluetoothDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gatt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                clear\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gatt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BluetoothRemoteGATTServer\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    gattserverdisconnected: []\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{"url":"classes/FakeBluetoothRemoteGATTCharacteristic.html","title":"class - FakeBluetoothRemoteGATTCharacteristic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTCharacteristic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                initialValue\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                properties\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                changeValue\n                            \n                            \n                                clear\n                            \n                            \n                                readValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                    BluetoothCharacteristicProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialValue\n                                                  \n                                                        \n                                                                    DataView\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        initialValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataView\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    characteristicvaluechanged: []\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BluetoothCharacteristicProperties\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataView\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeValue\n                        \n                    \n                \n            \n            \n                \nchangeValue(value: DataView)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            DataView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readValue\n                        \n                    \n                \n            \n            \n                \nreadValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTServer.html":{"url":"classes/FakeBluetoothRemoteGATTServer.html","title":"class - FakeBluetoothRemoteGATTServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connected\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                getPrimaryService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, services: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        services\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        device\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrimaryService\n                        \n                    \n                \n            \n            \n                \ngetPrimaryService(service: BluetoothServiceUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            BluetoothServiceUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTService.html":{"url":"classes/FakeBluetoothRemoteGATTService.html","title":"class - FakeBluetoothRemoteGATTService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                characteristics\n                            \n                            \n                                    Public\n                                device\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCharacteristic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, characteristics)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characteristics\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        characteristics\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        device\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCharacteristic\n                        \n                    \n                \n            \n            \n                \ngetCharacteristic(characteristic: BluetoothCharacteristicUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    characteristic\n                                    \n                                            BluetoothCharacteristicUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityComponent.html":{"url":"components/HumidityComponent.html","title":"component - HumidityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HumidityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/humidity.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-humidity\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/humidity.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/humidity.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/humidity.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { of, Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-humidity',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class HumidityComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', {static: true})\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt8(0),\n      service: 'ef680200-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680203-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n    .subscribe(\n      () => this.updateValue.bind(this),\n      () => of(this.hasError.bind(this)),\n      );\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    // tslint:disable-next-line: max-line-length\n    this.chart = new window.SmoothieChart({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n    .subscribe(\n      () => null,\n      () => of(this.hasError.bind(this)),\n    );\n  }\n\n\n  updateValue(value: number) {\n    console.log('Reading humidity %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoLoggerService.html":{"url":"injectables/NoLoggerService.html","title":"injectable - NoLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerWebBluetooth.html":{"url":"injectables/ServerWebBluetooth.html","title":"injectable - ServerWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServerWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        instance\n                        \n                    \n                \n            \n            \n                \n                    \n                    instance()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepCounterComponent.html":{"url":"components/StepCounterComponent.html","title":"component - StepCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/stepcounter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-stepcounter\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 55px;\n    left: 258px;\n    font-size: 38px;\n  }\n            \n\n            \n                template\n                {{ value || \"000\" }}\ndirections_walk\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/stepcounter.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/stepcounter.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/stepcounter.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-stepcounter',\n  template: `\n  {{ value || \"000\" }}\n  directions_walk\n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 55px;\n    left: 258px;\n    font-size: 38px;\n  }`],\n  providers: PROVIDERS\n})\nexport class StepCounterComponent implements OnInit, OnDestroy {\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  value = 0;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => {\n        const count = value.getUint32(0, true);\n        const time = value.getUint32(4, true);\n        return {\n          count, time\n        };\n      },\n      service: 'ef680400-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680405-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.streamSubscription = this.service.stream()\n      .subscribe(() => this.updateValue.bind(this), error => this.hasError.bind(this));\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: { time: number, count: number }) {\n    console.log('Reading step counter %d', value);\n    this.value = value.count;\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 55px;\n    left: 258px;\n    font-size: 38px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}directions_walk'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StepCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemperatureComponent.html":{"url":"components/TemperatureComponent.html","title":"component - TemperatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TemperatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/temperature.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-temperature\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/temperature.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChart\n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestValue\n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SmoothieChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chart', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimeSeries\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valuesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thingy52/temperature.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/temperature.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-temperature',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class TemperatureComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', {static: true})\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      characteristic: 'ef680201-9b35-4933-9b10-52ffa9740042',\n      service: 'ef680200-9b35-4933-9b10-52ffa9740042',\n      decoder: (value: DataView) => {\n        const integer = value.getInt8(0);\n        const decimal = value.getUint8(1);\n        return integer + decimal / 100;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe( () => this.updateValue.bind(this), error => this.hasError.bind(this));\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    this.chart = new window.SmoothieChart({\n      interpolation: 'step',\n      grid: {\n        fillStyle: '#ffffff',\n        strokeStyle: 'rgba(119,119,119,0.18)',\n        borderVisible: false\n      },\n      labels: {\n        fillStyle: '#000000',\n        fontSize: 17\n      },\n      tooltip: true\n    });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe( () => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    console.log('Reading temperature %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemperatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebBluetoothModule.html":{"url":"modules/WebBluetoothModule.html","title":"module - WebBluetoothModule","body":"\n                   \n\n\n\n\n    Modules\n    WebBluetoothModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AWBOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            interface\n            AWBOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            browserWebBluetooth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            consoleLoggerServiceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            makeMeTokenInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n            \n            injectable\n            BluetoothCore\n            \n                67 %\n                (21/31)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TI_SENSORAG_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TiTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            ConsoleLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            NoLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            interface\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n            \n            injectable\n            BrowserWebBluetooth\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n            \n            injectable\n            ServerWebBluetooth\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothDevice\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTCharacteristic\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ble.service.ts\n            \n            injectable\n            BleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            component\n            BatteryLevelComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            component\n            HumidityComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            component\n            StepCounterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            component\n            TemperatureComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.1.5\n        \n            @angular/cdk : ^15.1.5\n        \n            @angular/common : ^15.1.5\n        \n            @angular/compiler : ^15.1.5\n        \n            @angular/core : ^15.1.5\n        \n            @angular/forms : ^15.1.5\n        \n            @angular/material : ^15.1.5\n        \n            @angular/platform-browser : ^15.1.5\n        \n            @angular/platform-browser-dynamic : ^15.1.5\n        \n            @angular/router : ^15.1.5\n        \n            @release-it/conventional-changelog : ^5.1.1\n        \n            @types/web-bluetooth : 0.0.6\n        \n            rxjs : ~7.8.0\n        \n            smoothie : ^1.35.0\n        \n            ts-jest : ^29.0.5\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWebBluetooth   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            consoleLoggerServiceConfig   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            makeMeTokenInjector   (projects/.../bluetooth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        browserWebBluetooth\n                        \n                    \n                \n            \n            \n                \nbrowserWebBluetooth()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consoleLoggerServiceConfig\n                        \n                    \n                \n            \n            \n                \nconsoleLoggerServiceConfig(options: AWBOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMeTokenInjector\n                        \n                    \n                \n            \n            \n                \nmakeMeTokenInjector()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular\n\n\nInstall\nnpm install -S @manekinekko/angular-web-bluetooth @types/web-bluetooth\nNote: Make also sure the @types/web-bluetooth is installed correctly in your node_modules.\n\nGetting started\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true // or false, this will enable logs in the browser's console\n    })\n  ]\n  //...\n})\nexport class AppModule {}2.a) use it in your service/component (the easiest way)\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n\n  constructor(public readonly ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    // call this method to get a stream of values emitted by the device for a given characteristic\n    return this.ble.streamValues$().pipe(\n      map((value: DataView) => value.getInt8(0))\n    );\n  }\n\n  disconnectDevice() {\n    // call this method to disconnect from the device. This method will also stop clear all subscribed notifications\n    this.ble.disconnectDevice();\n  }\n\n  value() {\n    console.log('Getting Battery level...');\n\n    return this.ble\n      .value$({\n        service: 'battery_service',\n        characteristic: 'battery_level'\n      });\n  }\n\n}2.b) use it in your service/component (the advanced way)\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics they want.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  value() {\n    console.log('Getting Battery level...');\n\n    return this.ble\n\n        // 1) call the discover method will trigger the discovery process (by the browser)\n        .discover$({\n          acceptAllDevices: true,\n          optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n        })\n        .pipe(\n\n          // 2) get that service\n          mergeMap((gatt: BluetoothRemoteGATTServer) => {\n            return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n          }),\n\n          // 3) get a specific characteristic on that service\n          mergeMap((primaryService: BluetoothRemoteGATTService) => {\n            return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n          }),\n\n          // 4) ask for the value of that characteristic (will return a DataView)\n          mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n            return this.ble.readValue$(characteristic);\n          }),\n\n          // 5) on that DataView, get the right value\n          map((value: DataView) => value.getUint8(0))\n        )\n  }\n}API documentation\nThe API documentation can be found here:  https://manekinekko.github.io/angular-web-bluetooth/\nNeed a starter?\n\n\nThis project serves also as a starter. Run the following command:\nnpm startBlog post\nCheckout my full blog post on dev.to about how to use this package in your app.\nHave a PR?\nAll contributions are welcome. Here are few open issues that I need help with ;)\nLicense\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebBluetoothModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 15.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadValueOptions   (projects/.../bluetooth.service.ts)\n                        \n                        \n                            ServiceOptions   (src/.../ble.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReadValueOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/ble.service.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bleCore   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleCore   (src/.../humidity.component.ts)\n                        \n                        \n                            bleCore   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleCore   (src/.../temperature.component.ts)\n                        \n                        \n                            bleService   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleService   (src/.../humidity.component.ts)\n                        \n                        \n                            bleService   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleService   (src/.../temperature.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PROVIDERS   (src/.../battery-level.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../humidity.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../stepcounter.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../temperature.component.ts)\n                        \n                        \n                            TI_SENSORAG_SERVICES   (projects/.../ti-sensortag2.ts)\n                        \n                        \n                            TiTag   (projects/.../ti-sensortag2.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/thingy52/battery-level.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/humidity.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/stepcounter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/app/thingy52/temperature.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bleCore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (b: BluetoothCore) => new BleService(b)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TI_SENSORAG_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(TiTag).map(key => TiTag[key].SERVICE)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TiTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
